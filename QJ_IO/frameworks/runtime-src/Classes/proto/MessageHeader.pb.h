// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageHeader.proto

#ifndef PROTOBUF_MessageHeader_2eproto__INCLUDED
#define PROTOBUF_MessageHeader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace jynetwork {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageHeader_2eproto();
void protobuf_AssignDesc_MessageHeader_2eproto();
void protobuf_ShutdownFile_MessageHeader_2eproto();


enum eLoginResult {
  k_success = 0,
  k_faild = 1,
  k_version_error = 2,
  k_session_key_error = 3,
  k_repeat_login = 4,
  k_packet_error = 5,
  k_user_max = 6,
  k_crc_error = 7
};
bool eLoginResult_IsValid(int value);
const eLoginResult eLoginResult_MIN = k_success;
const eLoginResult eLoginResult_MAX = k_crc_error;
const int eLoginResult_ARRAYSIZE = eLoginResult_MAX + 1;

enum eCToSOperationCode {
  eCSMessageLoginAuth = 1,
  eCSMessageGateAuth = 2,
  eCSMessageCreateCharInfo = 6,
  eCSMessageCreateCharJob = 7,
  eCSMessageBattleResult = 19,
  eCSMessageClientOperation = 16,
  eCSMessageBattleBegin = 21,
  eCSMessagePing = 23,
  eCSMessageGMCommond = 25,
  eCSMessageRankList = 37,
  eCSMessageBattleCheck = 40,
  eCSMessagePlayerQuery = 49,
  eCSMessageCorpsOper = 50,
  eCSMessageChat = 55,
  eCSMessageNetBattleBegin = 56,
  eCSMessageNetBattleOper = 64,
  eCSMessageArenaBattleBegin = 68
};
bool eCToSOperationCode_IsValid(int value);
const eCToSOperationCode eCToSOperationCode_MIN = eCSMessageLoginAuth;
const eCToSOperationCode eCToSOperationCode_MAX = eCSMessageArenaBattleBegin;
const int eCToSOperationCode_ARRAYSIZE = eCToSOperationCode_MAX + 1;

enum eSToCOperationCode {
  SNullStart = 0,
  eSCMessageLoginAuth = 3,
  eSCMessageGateAuth = 4,
  eSCUserDetailInfo = 5,
  eSCMessageOperationResult = 8,
  eSCMessageBattleReward = 18,
  eSCOpponentDetailInfo = 20,
  eSCMessagePong = 22,
  eSCMessageBattlePrepare = 24,
  eSCMessageShopItem = 32,
  eSCMessageCompress = 33,
  eSCMessageSysNotice = 34,
  eSCMessageMail = 35,
  eSCMessageBattleRewardEnd = 36,
  eSCMessageRankList = 38,
  eSCMessageBattleSweepReward = 39,
  eSCMessageBattleCheck = 41,
  eSCQueryDetailInfo = 48,
  eSCMessageCorpsOper = 51,
  eSCMessageCorpsInfo = 52,
  eMessagePKOper = 53,
  eSCMessagePKOperResult = 54,
  eSCMessageNetBattlePrepare = 57,
  eSCMessageNetBattleOper = 65,
  eSCMessageCorpsList = 66,
  eSCMessageCorpsBossInfo = 67,
  eSCMessageFriendList = 69
};
bool eSToCOperationCode_IsValid(int value);
const eSToCOperationCode eSToCOperationCode_MIN = SNullStart;
const eSToCOperationCode eSToCOperationCode_MAX = eSCMessageFriendList;
const int eSToCOperationCode_ARRAYSIZE = eSToCOperationCode_MAX + 1;

enum eOpertionResult {
  eOper_success = 1,
  eOper_faild = 2,
  eOper_name_too_long = 3,
  eOper_name_too_short = 4,
  eOper_name_alread_exist = 5,
  eOper_job_not_exist = 6,
  eOper_task_lv_min = 7,
  eOper_task_lv_max = 8,
  eOper_task_time_error = 9,
  eOper_task_pretask_error = 10,
  eOper_task_job_error = 11,
  eOper_task_can_not_finish = 12,
  eOper_shop_refresh_time_limit = 13,
  eOper_shop_type_error = 14,
  eOper_buy_limit = 15,
  eOper_item_null = 16,
  eOper_item_sold = 17,
  eOper_item_num_one = 18,
  eOper_bag_full = 19,
  eOper_money_not_enough = 20,
  eOper_sweep_success = 21,
  eOper_battle_abort = 22,
  eOper_no_times = 23,
  eOper_code_error = 24,
  eOper_code_already_use = 25,
  eOper_code_same_type = 26,
  eOper_battle_cheat = 27,
  eOper_success_no_level_up = 28,
  eOper_battle_prepear_check_faild = 29,
  eOper_well_over_success = 30,
  eOper_code_over = 31,
  eOper_code_outofdate = 32,
  eOper_corps_boss_permision_faild = 33,
  eOper_corps_boss_isopen = 34,
  eOper_corps_boss_point_faild = 35,
  eOper_net_battle_add_player = 36,
  eOper_net_battle_begin = 37
};
bool eOpertionResult_IsValid(int value);
const eOpertionResult eOpertionResult_MIN = eOper_success;
const eOpertionResult eOpertionResult_MAX = eOper_net_battle_begin;
const int eOpertionResult_ARRAYSIZE = eOpertionResult_MAX + 1;

enum eSSOpertionType {
  eOperLogout = 1,
  eOper_lilith_char_lv = 2,
  eOper_push_msg = 3,
  eOper_server_push_msg = 4
};
bool eSSOpertionType_IsValid(int value);
const eSSOpertionType eSSOpertionType_MIN = eOperLogout;
const eSSOpertionType eSSOpertionType_MAX = eOper_server_push_msg;
const int eSSOpertionType_ARRAYSIZE = eSSOpertionType_MAX + 1;

enum eOpertionType {
  eOper_create_char_info = 1,
  eOper_create_char_job = 2,
  eOper_char_change_job = 3,
  eOper_char_intensify = 4,
  eOper_equip_level_up = 5,
  eOper_equip_intensify = 6,
  eOper_equip_star_up = 7,
  eOper_card_level_up = 8,
  eOper_card_intensify = 9,
  eOper_card_star_up = 10,
  eOper_equip_change = 11,
  eOper_item_use = 12,
  eOper_item_buy = 13,
  eOper_item_sell = 14,
  eOper_item_lottery = 15,
  eOper_task_done = 16,
  eOper_equip_card = 17,
  eOper_show_shop_item = 18,
  eOper_refresh_shop_item = 19,
  eOper_equip_skill = 20,
  eOper_skill_lv_up = 21,
  eOper_buy_gold = 22,
  eOper_buy_stamina = 23,
  eOper_card_skill_lv_up = 24,
  eOper_card_limit_up = 25,
  eOper_sys_notice = 26,
  eOper_mail_list = 27,
  eOper_mail_read = 28,
  eOper_mail_item = 29,
  eOper_mail_del = 30,
  eOper_change_guide = 31,
  eOper_auto_equip = 32,
  eOper_lock_equip = 33,
  eOper_time = 34,
  eOper_repeat_skill_up = 35,
  eOper_change_opponent = 36,
  eOper_week_login = 37,
  eOper_equip_decom = 38,
  eOper_equip_inject = 39,
  eOper_equip_decom_batch = 40,
  eOper_activity = 41,
  eOper_partner_level_up = 42,
  eOper_partner_intensify = 43,
  eOper_partner_star_up = 44,
  eOper_roulette = 45,
  eOper_partner_summon = 46,
  eOper_reset_map = 47,
  eOper_active_code = 48,
  eOper_charge = 49,
  eOper_identify = 50,
  eOper_identify_cancel = 51,
  eOper_identify_comfirm = 52,
  eOper_reidentify = 53,
  eOper_equip_inject_batch = 54,
  eOper_equip_intensify_batch = 55,
  eOper_partner_level_up_batch = 56,
  eOper_can_double_map = 57,
  eOper_get_local_time = 58,
  eOper_sys_setting = 59,
  eOper_well_over = 60,
  eOper_sdk_charge = 61,
  eOper_task_can_finish = 62,
  eOper_gmt_time = 63,
  eOper_corps_boss = 64,
  eOper_corps_boss_info = 65,
  eOper_corps_boss_hp = 66,
  eOper_double_open = 67,
  eOper_double_list = 68,
  eOper_double_invite = 69,
  eOper_double_invite_to_player = 70,
  eOper_double_invite_ack = 71,
  eOper_add_friend = 72,
  eOper_del_friend = 73,
  eOper_double_invite_cancel = 74,
  eOper_equip_card_pvp = 75,
  eOper_change_check_point = 76,
  eOper_gm_cmd = 998,
  eOper_out_charge = 999,
  eOper_battle_begin = 1000,
  eOper_battle_end = 1001
};
bool eOpertionType_IsValid(int value);
const eOpertionType eOpertionType_MIN = eOper_create_char_info;
const eOpertionType eOpertionType_MAX = eOper_battle_end;
const int eOpertionType_ARRAYSIZE = eOpertionType_MAX + 1;

enum ePKOperationOper {
  eOper_pk_match = 1,
  eOper_pk_start = 2,
  eOper_pk_skill = 3,
  eOper_pk_hp = 4
};
bool ePKOperationOper_IsValid(int value);
const ePKOperationOper ePKOperationOper_MIN = eOper_pk_match;
const ePKOperationOper ePKOperationOper_MAX = eOper_pk_hp;
const int ePKOperationOper_ARRAYSIZE = ePKOperationOper_MAX + 1;

enum eCorpsOpertionType {
  eOper_corps_create = 1,
  eOper_corps_create_ack = 2,
  eOper_corps_join = 3,
  eOper_corps_join_ack = 4,
  eOper_corps_invite = 5,
  eOper_corps_invite_ack = 6,
  eOper_corps_leave = 7,
  eOper_corps_leave_ack = 8,
  eOper_corps_info = 9,
  eOper_corps_info_ack = 10,
  eOper_corps_list = 11,
  eOper_corps_list_ack = 12,
  eOper_corps_reject = 13,
  eOper_corps_reject_ack = 14,
  eOper_corps_accept = 15,
  eOper_corps_accept_ack = 16,
  eOper_corps_change_join = 17,
  eOper_corps_change_join_ack = 18,
  eOper_corps_change_info = 19,
  eOper_corps_change_info_ack = 20,
  eOper_corps_change_position = 21,
  eOper_corps_change_position_ack = 22,
  eOper_corps_add_exp = 23,
  eOper_corps_search = 24,
  eOper_corps_kick = 25,
  eOper_corps_kick_ack = 26,
  eOper_corps_cancel = 27,
  eOper_corps_cancel_ack = 28,
  eOper_corps_apply_list = 29,
  eOper_world_boss_damage = 30
};
bool eCorpsOpertionType_IsValid(int value);
const eCorpsOpertionType eCorpsOpertionType_MIN = eOper_corps_create;
const eCorpsOpertionType eCorpsOpertionType_MAX = eOper_world_boss_damage;
const int eCorpsOpertionType_ARRAYSIZE = eCorpsOpertionType_MAX + 1;

// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace jynetwork

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageHeader_2eproto__INCLUDED
